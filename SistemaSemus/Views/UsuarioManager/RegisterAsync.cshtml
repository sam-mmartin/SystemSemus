@model SistemaSemus.ViewModels.RegisterViewModel

@{
    Layout = "~/Views/Shared/_LayoutCreate.cshtml";

    var comboSetor = new List<SelectListItem>();
    var comboFuncao = new List<SelectListItem>();
    foreach (var item in SistemaSemus.MetodosGlobais.ComboS.Setor)
    {
        comboSetor.Add(item);
    }
    foreach (var item in SistemaSemus.MetodosGlobais.ComboS.Funcao)
    {
        comboFuncao.Add(item);
    }
}

<div class="container">
    <div class="py-5 text-center">
        <img class="d-block mx-auto mb-4" src="~/Images/doctor.png" alt="" height="100">
        <h2>Registrar Novo Usuário</h2>
        <p class="lead">Below is an example form built entirely with Bootstrap’s form controls. Each required form group has a validation state that can be triggered by attempting to submit the form without completing it.</p>
    </div>

    <div class="row">
        <div class="col-md-12">
            <h4 class="mb-3">Billing address</h4>
            @using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "needs-validation" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary("", new { @class = "text-danger" })

                <!-- Nome - Usuario -->
                <div class="row">
                    <div class="col-md-6 mb-3">
                        @Html.LabelFor(model => model.Nome)
                        @Html.TextBoxFor(model => model.Nome, new { @class = "form-control", placeholder = "Digite seu nome completo" })
                        @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-6 mb-3">
                        @Html.LabelFor(model => model.UserName)
                        <div class="input-group">
                            <div class="input-group-prepend">
                                <span class="input-group-text"><i class="fas fa-at"></i></span>
                            </div>
                            @Html.TextBoxFor(model => model.UserName, new { @class = "form-control", placeholder = "Usuário" })
                            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <!-- Email - Endereço -->
                <div class="row">
                    <div class="col-md-6 mb-3">
                        @Html.LabelFor(model => model.Email)
                        @Html.TextBoxFor(model => model.Email, new { @class = "form-control", placeholder = "you@example.com", type = "email" })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-6 mb-3">
                        @Html.LabelFor(model => model.Endereco)
                        @Html.TextBoxFor(model => model.Endereco, new { @class = "form-control", placeholder = "Rua 01, 100" })
                        @Html.ValidationMessageFor(model => model.Endereco, "", new { @class = "text-danger" })
                    </div>
                </div>

                <!-- Nascimento - Celular -->
                <div class="row">
                    <div class="col-md-6 mb-3">
                        @Html.LabelFor(model => model.Nascimento)
                        @Html.TextBoxFor(model => model.Nascimento, new { @class = "form-control", type = "date" })
                        @Html.ValidationMessageFor(model => model.Nascimento, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-6 mb-3">
                        @Html.LabelFor(model => model.Fone)
                        @Html.TextBoxFor(model => model.Fone, new { @class = "form-control phone", placeholder = "Digite o número do celular" })
                        @Html.ValidationMessageFor(model => model.Fone, "", new { @class = "text-danger" })
                    </div>
                </div>

                <!-- Setor - Função -->
                <div class="row">
                    <div class="col-md-6 mb-3">
                        @Html.LabelFor(model => model.Setor)
                        @Html.DropDownListFor(model => model.Setor, comboSetor, new { @class = "form-control", placeholder = "Rua 01, 100" })
                        @Html.ValidationMessageFor(model => model.Setor, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-6 mb-3">
                        @Html.LabelFor(model => model.Funcao)
                        @Html.DropDownListFor(model => model.Funcao, comboFuncao, new { @class = "form-control", placeholder = "Rua 01, 100" })
                        @Html.ValidationMessageFor(model => model.Setor, "", new { @class = "text-danger" })
                    </div>
                </div>

                <!-- Senha -->
                <div class="row">
                    <div class="col-md-6 mb-3">
                        @Html.LabelFor(model => model.Password)
                        @Html.PasswordFor(model => model.Password, new { @class = "form-control", placeholder = "Digite uma senha" })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-6 mb-3">
                        @Html.LabelFor(model => model.ConfirmPassword)
                        @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control", placeholder = "Confirme a senha digitada" })
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-4">
                        <a href="~/UsuarioManager/IndexAsync" class="btn btn-outline-dark btn-lg btn-block">Voltar</a>
                    </div>
                    <div class="col-md-4">
                        <button class="btn btn-primary btn-lg btn-block" type="submit">Registrar</button>
                    </div>
                    <div class="col-md-4"></div>
                </div>
            }
        </div>
    </div>

    <hr />
</div>

@section Scripts {
    @Scripts.Render("~/bundles/selectpicker")
    @Scripts.Render("~/bundles/masks")
}
